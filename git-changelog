#!/usr/bin/python
# -*- coding: utf-8 -*-

# Copyright (c) 2011-2012 Martin Ueding <dev@martin-ueding.de>

import argparse
import subprocess

from gitchangelog import *

__docformat__ = "javadoc"

def parse_args():
    """
    Parses command line arguments into global `options` variable.
    """

    parser = argparse.ArgumentParser(description="Generate changelog from annotated tags.")
    parser.add_argument('-a', '--all', dest="list_all", default=False, action='store_true', help="Show tags from all branches (default: %(default)s")
    parser.add_argument('--filter', dest="regex", default=None, help="Regex to filter tags (default: %(default)s")
    return parser.parse_args()


def main():
    """
    Parse arguments, check for git dir and generate changelog.
    """
    options = parse_args()

    if not has_git_dir():
        print "Error: This is not a git repository."
        sys.exit(1)

    try:
        pager = [subprocess.check_output(["git", "config", "--get", "core.pager"]).strip()]
    except subprocess.CalledProcessError:
        pager = "less -FRSX".split(' ')


    proc = subprocess.Popen(pager, stdin=subprocess.PIPE)
    generate_changelog(generate_tag_list(options), proc.stdin)
    proc.stdin.close()
    proc.communicate()


if __name__ == "__main__":
	main()
